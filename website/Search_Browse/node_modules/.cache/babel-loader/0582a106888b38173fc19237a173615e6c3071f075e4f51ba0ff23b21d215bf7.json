{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jay\\\\Documents\\\\GitHub\\\\FeatherFind\\\\website\\\\Search_Browse\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\nimport './App.css'; // Import the CSS file\nimport Navbar from './Components/Navbar.jsx'; // Assuming Navbar exists\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State for search term\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Example data for birds (replace this with actual data if needed)\n  const birds = [{\n    id: 1,\n    name: 'Cardinal'\n  }, {\n    id: 2,\n    name: 'Blue Jay'\n  }, {\n    id: 3,\n    name: 'Hummingbird'\n  }, {\n    id: 4,\n    name: 'Eagle'\n  }, {\n    id: 5,\n    name: 'Sparrow'\n  }];\n\n  // Filter birds based on the search term\n  const filteredBirds = birds.filter(bird => bird.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for a bird...\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value),\n          className: \"search-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid-container\",\n        children: filteredBirds.length > 0 ? filteredBirds.map(bird => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-item\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/bird/${bird.id}`,\n            className: \"bird-link\",\n            children: bird.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this)\n        }, bird.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"No birds found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"a1cMJ8t0eYFnsCEdGcHtaGJdbCM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Route","Routes","Link","Navbar","jsxDEV","_jsxDEV","App","_s","searchTerm","setSearchTerm","birds","id","name","filteredBirds","filter","bird","toLowerCase","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","placeholder","value","onChange","e","target","length","map","to","_c","$RefreshReg$"],"sources":["C:/Users/Jay/Documents/GitHub/FeatherFind/website/Search_Browse/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes, Link } from 'react-router-dom';\r\nimport './App.css'; // Import the CSS file\r\nimport Navbar from './Components/Navbar.jsx';  // Assuming Navbar exists\r\n\r\nfunction App() {\r\n  // State for search term\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  // Example data for birds (replace this with actual data if needed)\r\n  const birds = [\r\n    { id: 1, name: 'Cardinal' },\r\n    { id: 2, name: 'Blue Jay' },\r\n    { id: 3, name: 'Hummingbird' },\r\n    { id: 4, name: 'Eagle' },\r\n    { id: 5, name: 'Sparrow' }\r\n  ];\r\n\r\n  // Filter birds based on the search term\r\n  const filteredBirds = birds.filter(bird =>\r\n    bird.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n\r\n      <div className=\"main-content\"> {/* Apply background image to this section */}\r\n        <div className=\"search-bar-container\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search for a bird...\"\r\n            value={searchTerm}\r\n            onChange={e => setSearchTerm(e.target.value)}\r\n            className=\"search-input\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"grid-container\">\r\n          {filteredBirds.length > 0 ? (\r\n            filteredBirds.map(bird => (\r\n              <div key={bird.id} className=\"grid-item\">\r\n                <Link to={`/bird/${bird.id}`} className=\"bird-link\">\r\n                  {bird.name}\r\n                </Link>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <div>No birds found</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}